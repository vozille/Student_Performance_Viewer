import requests
from lxml import html
from collections import OrderedDict
keys = [345,398,473,525]
roll = ['1301106001', '1301106002', '1301106003', '1301106004', '1301106005', '1301106006', '1301106007', '1301106008', '1301106009', '1301106010', '1301106012', '1301106013', '1301106014', '1301106015', '1301106016', '1301106017', '1301106018', '1301106019', '1301106020', '1301106021', '1301106022', '1301106023', '1301106024', '1301106026', '1301106027', '1301106028', '1301106029', '1301106030', '1301106031', '1301106032', '1301106033', '1301106034', '1301106035', '1301106036', '1301106037', '1301106038', '1301106040', '1301106041', '1301106042', '1301106043', '1301106044', '1301106045', '1301106046', '1301106047', '1301106048', '1301106049', '1301106050', '1301106051', '1301106052', '1301106054', '1301106055', '1301106056', '1301106057', '1301106058', '1301106059', '1301106060', '1301106061', '1301106062', '1301106063', '1301106064', '1301106065', '1301106066', '1301106067', '1301106068', '1301106069', '1301106070', '1301106071', '1301106072', '1301106073', '1301106074', '1301106075', '1301106076', '1301106077', '1301106078', '1301106079', '1301106080', '1301106082', '1301106083', '1301106084', '1301106085', '1301106086', '1301106087', '1301106088', '1301106089', '1301106090', '1301106091', '1301106092', '1301106093', '1301106094', '1301106095', '1301106096', '1301106097', '1301106098', '1301106099', '1301106100', '1301106102', '1301106103', '1301106104', '1301106106', '1301106107', '1301106108', '1301106109', '1301106110', '1301106111', '1301106112', '1301106113', '1301106114', '1301106115', '1301106116', '1301106117', '1301106118', '1301106120', '1301106121', '1301106122', '1301106123', '1301106124', '1301106125', '1301106126', '1301106127', '1301106128', '1301106129', '1301106130', '1301106133', '1301106134', '1301106135', '1301106136', '1301106137', '1301106138', '1301106139', '1301106140', '1301106142', '1301106143', '1301106144', '1301106145', '1301106146', '1301106147', '1301106148', '1301106150', '1301106151', '1301106152', '1301106153', '1301106154', '1301106155', '1301106156', '1301106157', '1301106158', '1301106159', '1301106160', '1301106161', '1301106162', '1301106163', '1301106164', '1301106165', '1301106166', '1301106167', '1301106168', '1301106169', '1301106171', '1301106172', '1301106173', '1301106174', '1301106175', '1301106176', '1301106177', '1301106178', '1301106179', '1301106180', '1301106181', '1301106182', '1301106183', '1301106184', '1301106185', '1301106186', '1301106187', '1301106188', '1301106189', '1301106190', '1301106191', '1301106192', '1301106193', '1301106194', '1301106195', '1301106196', '1301106197', '1301106198', '1301106199', '1301106200', '1301106201', '1301106202', '1301106203', '1301106204', '1301106206', '1301106208', '1301106209', '1301106210', '1301106211', '1301106213', '1301106215', '1301106216', '1301106217', '1301106218', '1301106219', '1301106221', '1301106222', '1301106223', '1301106224', '1301106225', '1301106226', '1301106227', '1301106228', '1301106229', '1301106230', '1301106231', '1301106232', '1301106233', '1301106234', '1301106235', '1301106237', '1301106238', '1301106239', '1301106240', '1301106241', '1301106242', '1301106243', '1301106244', '1301106245', '1301106246', '1301106247', '1301106248', '1301106249', '1301106250', '1301106251', '1301106252', '1301106253', '1301106254', '1301106255', '1301106256', '1301106257', '1301106258', '1301106259', '1301106260', '1301106261', '1301106263', '1301106264', '1301106265', '1301106266', '1301106267', '1301106268', '1301106269', '1301106270', '1301106271', '1301106272', '1301106273', '1301106274', '1301106275', '1301106276', '1301106277', '1301106279', '1301106280', '1301106281', '1301106282', '1301106283', '1301106284', '1301106285', '1301106286', '1301106288', '1301106289', '1301106290', '1301106291', '1301106293', '1301106294', '1301106295', '1301106297', '1301106298', '1301106299', '1301106300', '1301106301', '1301106303', '1301106304', '1301106305', '1301106306', '1301106307', '1301106308', '1301106309', '1301106310', '1301106311', '1301106312', '1301106313', '1301106314', '1301106315', '1301106316', '1301106317', '1301106318', '1301106319', '1301106320', '1301106322', '1301106324', '1301106325', '1301106326', '1301106327', '1301106328', '1301106329', '1301106330', '1301106331', '1301106333', '1301106334', '1301106335', '1301106336', '1301106337', '1301106338', '1301106339', '1301106340', '1301106341', '1301106342', '1301106343', '1301106344', '1301106346', '1301106347', '1301106348', '1301106349', '1301106350', '1301106351', '1301106352', '1301106354', '1301106356', '1301106357', '1301106358', '1301106359', '1301106360', '1301106361', '1301106362', '1301106363', '1301106364', '1301106365', '1301106366', '1301106367', '1301106368', '1301106369', '1301106370', '1301106371', '1301106372', '1301106373', '1301106374', '1301106375', '1301106376', '1301106377', '1301106378', '1301106379', '1301106380', '1301106381', '1301106382', '1301106383', '1301106385', '1301106386', '1301106387', '1301106389', '1301106390', '1301106392', '1301106393', '1301106394', '1301106395', '1301106396', '1301106398', '1301106399', '1301106400', '1301106401', '1301106403', '1301106404', '1301106405', '1301106406', '1301106407', '1301106408', '1301106409', '1301106410', '1301106411', '1301106412', '1301106413', '1301106415', '1301106416', '1301106417', '1301106418', '1301106419', '1301106420', '1301106421', '1301106422', '1301106423', '1301106425', '1301106426', '1301106427', '1301106428', '1301106429', '1301106430', '1301106431', '1301106432', '1301106433', '1301106434', '1301106435', '1301106436', '1301106437', '1301106438', '1301106439', '1301106440', '1301106441', '1301106442', '1301106443', '1301106445', '1301106446', '1301106447', '1301106448', '1301106449', '1301106450', '1301106451', '1301106452', '1301106453', '1301106454', '1301106455', '1301106456', '1301106457', '1301106458', '1301106459', '1301106460', '1301106461', '1301106462', '1301106463', '1301106464', '1301106465', '1301106466', '1301106467', '1301106468', '1301106469', '1301106470', '1301106471', '1301106472', '1301106473', '1301106474', '1301106475', '1301106476', '1301106478', '1301106479', '1301106480', '1301106481', '1301106482', '1301106483', '1301106484', '1301106485', '1301106486', '1301106487', '1301106488', '1301106489', '1301106490', '1301106491', '1301106492', '1301106493', '1301106494', '1301106495', '1301106496', '1301106497', '1301106498', '1301106499', '1301106500', '1301106502', '1301106503', '1301106504', '1301106505', '1301106506', '1301106507', '1301106508', '1301106510', '1301106511', '1301106513', '1301106515', '1301106516', '1301106517', '1301106518', '1301106519', '1301106520', '1301106521', '1301106522', '1301106523', '1301106524', '1301106525', '1301106526', '1301106527', '1301106529', '1301106530', '1301106531', '1301106532', '1301106533', '1301106534', '1301106535', '1301106536', '1301106537', '1301106538', '1301106539', '1301106540', '1301106541', '1301106542', '1301106544', '1301106545', '1301106546', '1301106547', '1301106548', '1301106549', '1301106550', '1301106551', '1301106552', '1301106553', '1301106554', '1301106555', '1301106557', '1301106558', '1301106559', '1301106560', '1301106561', '1301106562', '1301106563', '1301106565', '1301106566', '1301106567', '1301106570', '1301106571', '1301106572', '1301106573', '1301106574', '1301106575', '1301106576', '1301106577', '1301106578', '1301106579', '1301106580', '1301106581', '1301106582', '1301106583', '1301106584', '1301106585', '1301106586', '1301106587', '1301106588', '1301106589', '1301106590', '1301106591', '1301106592', '1301106593', '1301106594', '1301106595', '1301106597', '1301106598', '1301106599', '1301106600', '1301106601', '1301106602']
ind = ["MECHANICAL ENGINEERING ","ELECTRICAL ENGINEERING ","CIVIL ENGINEERING ","INSTRUMENTATION & ELECTRONICS ENGINEERING "\
,"COMPUTER SCIENCE & ENGINEERING ","BIO TECHNOLOGY ","INFORMATION TECHNOLOGY ","TEXTILE ENGINEERING ","FASHION TECHNOLOGY ","BACHELOR OF ARCHITECTURE "]
visited = [False]*len(ind)
while len(roll):
    pages = [requests.get('http://results.bput.ac.in/'+str(i)+'_RES/'+roll[0]+'.html') for i in keys]
    trees = [html.fromstring(i.text) for i in pages]

    name = trees[0].xpath('/html/body/table/tr[3]/td/table/tr[2]/td[2]/b/text()')
    branch = trees[0].xpath("/html/body/table/tr[3]/td/table/tr[4]/td[2]/b/text()")
    grades = [(trees[i].xpath("/html/body/table/tr[5]/td/table/tr[position() > 1]/td[5]/text()")) for i in range(len(pages))]
    sub = [trees[i].xpath("/html/body/table/tr[5]/td/table/tr[position() > 1]/td[3]/text()") for i in range(len(pages))]
    ikey = ind.index(branch[0]+' ')
    flag = True
    for i in range(len(sub)):
        try:
            r = sub[i][-1]
        except IndexError:
            flag = False
            break
        del sub[i][-1]
        sub[i].append("SGPA-"+str(i+1))
        grades[i].append(r)
    if not flag:
        del roll[0]
        continue
    d = OrderedDict()
    fields = []
    d['Name'] = name[0]
    d['roll'] = roll[0]
    for i in range(len(sub)):
        for j in range(len(sub[i])):
            d[sub[i][j]] = grades[i][j]
    for i in d:
        fields.append(i)
    print d
    import csv
    with open('sample_'+str(branch[0])+'.csv','a') as csvFile:
        writer = csv.DictWriter(csvFile, lineterminator='\n', fieldnames=fields)
        if not visited[ikey]:
            writer.writeheader()
            visited[ikey] = True
        writer.writerow(d)
    csvFile.close()
    del roll[0]
